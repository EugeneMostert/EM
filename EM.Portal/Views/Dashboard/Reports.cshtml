@model EM.Portal.Models.ReportViewModel

@{
    ViewBag.Title = "Reports";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Reports", "Dashboard", FormMethod.Post, new { id= "reportForm" } ))
{
    <h4>StockTimeSeriesModel</h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        @*@Html.Partial("Report/_StockTimeSeries", Model.StockTimeSeries)*@
        <div class="fields">
            <div class=" field">
                @Html.LabelFor(model => model.StockTimeSeries.Function)
                @Html.EnumDropDownListFor(model => model.StockTimeSeries.Function, "Select Type", new { @class = "ui dropdown" })
                @Html.ValidationMessageFor(model => model.StockTimeSeries.Function, "", new { @class = "text-danger" })
            </div>

            <div class="field">
                @Html.LabelFor(model => model.StockTimeSeries.Symbol)
                @Html.EditorFor(model => model.StockTimeSeries.Symbol, new { htmlAttributes = new { @type = "text" } })
                @Html.ValidationMessageFor(model => model.StockTimeSeries.Symbol, "", new { @class = "text-danger" })
            </div>
            <div class="field">
                @Html.LabelFor(model => model.StockTimeSeries.OutputSize)
                @Html.EnumDropDownListFor(model => model.StockTimeSeries.OutputSize, new { @class = "ui dropdown" })
                @Html.ValidationMessageFor(model => model.StockTimeSeries.OutputSize, "", new { @class = "text-danger" })
            </div>
            <div class="field">
                @Html.LabelFor(model => model.StockTimeSeries.Interval)
                @Html.EnumDropDownListFor(model => model.StockTimeSeries.Interval, new { @class = "ui dropdown" })
                @Html.ValidationMessageFor(model => model.StockTimeSeries.Interval, "", new { @class = "text-danger" })
            </div>
            <div class="field">
                @Html.LabelFor(model => model.StockTimeSeries.DataType)
                @Html.EnumDropDownListFor(model => model.StockTimeSeries.DataType, new { @class = "ui dropdown" })
                @Html.ValidationMessageFor(model => model.StockTimeSeries.DataType, "", new { @class = "text-danger" })
            </div>
            <div class="field">
                @Html.LabelFor(model => model.StockTimeSeries.ApiKey)
                @Html.EditorFor(model => model.StockTimeSeries.ApiKey, new { htmlAttributes = new { @type = "text" } })
                @Html.ValidationMessageFor(model => model.StockTimeSeries.ApiKey, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <h4>Config</h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        @*@Html.Partial("Report/_Config", Model._config)*@
        <div class="fields">

            <div class="field">
                @Html.LabelFor(model => model._config.Key, htmlAttributes: new { @type = "text" })
                @Html.EditorFor(model => model._config.Key)
                @Html.ValidationMessageFor(model => model._config.Key, "", new { @class = "text-danger" })
            </div>

            <div class="field">
                @Html.LabelFor(model => model._config.Secret, htmlAttributes: new { @type = "text" })
                @Html.EditorFor(model => model._config.Secret)
                @Html.ValidationMessageFor(model => model._config.Secret, "", new { @class = "text-danger" })
            </div>

            @Html.HiddenFor(model => model._config.ID)

            <div class="field">
                @Html.LabelFor(model => model._config.BaseUrl, htmlAttributes: new { @type = "text" })
                @Html.EditorFor(model => model._config.BaseUrl)
                @Html.ValidationMessageFor(model => model._config.BaseUrl, "", new { @class = "text-danger" })
            </div>


            <div class="field">

                @Html.LabelFor(model => model._config.Schema, htmlAttributes: new { @type = "text" })
                @Html.EditorFor(model => model._config.Schema)
                @Html.ValidationMessageFor(model => model._config.Schema, "", new { @class = "text-danger" })
            </div>

            <div class="field">
                @Html.LabelFor(model => model._config.Port, htmlAttributes: new { @type = "text" })
                @Html.EditorFor(model => model._config.Port)
                @Html.ValidationMessageFor(model => model._config.Port, "", new { @class = "text-danger" })
            </div>

            <div class="field">
                @Html.LabelFor(model => model._config.Path, htmlAttributes: new { @type = "text" })
                @Html.EditorFor(model => model._config.Path)
                @Html.ValidationMessageFor(model => model._config.Path, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        @*@Html.ActionLink("Get Reports",MVC.Dashboard.ReportResults(Model), new { @class = "ui button"})*@
        <input class="ui button" type="submit" id="getReport" value="Get Report"/>
        @*<input type="submit" name="Submit" value="Submit" />*@
    </div>
    <div class="row">
        <div id="reportResults"></div>
        @*@{Html.RenderAction("_ReportResults"); }*@
    </div>

}
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>