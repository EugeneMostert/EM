@model EM.Services.AlphaVantage.Entities.ApiQueries.StockTimeSeriesModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>StockTimeSeriesModel</h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <hr />
        <div class="row">
            <div class="fields">
                <div class=" field">
                    @Html.LabelFor(model => model.Function)
                    @Html.EnumDropDownListFor(model => model.Function, "Select Type", new { @class = "ui dropdown" })
                    @Html.ValidationMessageFor(model => model.Function, "", new { @class = "text-danger" })
                </div>
            
                <div class="field">
                    @Html.LabelFor(model => model.Symbol)
                    @Html.EditorFor(model => model.Symbol, new { htmlAttributes = new { @type = "text" } })
                    @Html.ValidationMessageFor(model => model.Symbol, "", new { @class = "text-danger" })
                </div>
                <div class="field">
                    @Html.LabelFor(model => model.OutputSize)
                    @Html.EnumDropDownListFor(model => model.OutputSize, new { @class = "ui dropdown" })
                    @Html.ValidationMessageFor(model => model.OutputSize, "", new { @class = "text-danger" })
                </div>
                <div class="field">
                    @Html.LabelFor(model => model.Interval)
                    @Html.EnumDropDownListFor(model => model.Interval, new { @class = "ui dropdown" })
                    @Html.ValidationMessageFor(model => model.Interval, "", new { @class = "text-danger" })
                </div>
                <div class="field">
                    @Html.LabelFor(model => model.DataType)
                    @Html.EnumDropDownListFor(model => model.DataType, new { @class = "ui dropdown" })
                    @Html.ValidationMessageFor(model => model.DataType, "", new { @class = "text-danger" })
                </div>
                <div class="field">
                    @Html.LabelFor(model => model.ApiKey)
                    @Html.EditorFor(model => model.ApiKey, new { htmlAttributes = new { @type = "text" } })
                    @Html.ValidationMessageFor(model => model.ApiKey, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    @*<div class="form-horizontal">
        <h4>StockTimeSeriesModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="four wide column">
            <div class="form-group">
                @Html.LabelFor(model => model.Function, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.EditorFor(model => model.Function, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Function, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="four wide column">
            <div class="form-group">
                @Html.LabelFor(model => model.Symbol, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.EditorFor(model => model.Symbol, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Symbol, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OutputSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OutputSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OutputSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Interval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Interval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Interval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApiKey, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApiKey, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApiKey, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>*@
}

